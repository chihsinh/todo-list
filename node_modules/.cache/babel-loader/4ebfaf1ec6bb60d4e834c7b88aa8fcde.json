{"ast":null,"code":"var _jsxFileName = \"/Users/chihsin1/Documents/wp1092/hw3/own/src/containers/TodoApp.js\";\nimport React, { Component } from \"react\";\nimport Header from \"../components/Header\";\n/*import Section from \"../components/Section\";*/\n\n/*import Footer from \"../components/Footer\";*/\n\n/*function Footer(props) {\n\t\tconst cnt = props.count;\n\t\tconst leftCnt = props.inCompleteCnt;\n\t\tif (cnt !== 0) {\n\t\t\treturn (\n\t\t\t\t<footer className=\"todo-app__footer\" id=\"todo-footer\">\n\t\t\t        <div className=\"todo-app__total\">\n\t\t\t            {leftCnt} left\n\t\t\t        </div>\n\t\t\t        <ul className=\"todo-app__view-buttons\">\n\t\t\t            <button>All</button>\n\t\t\t            <button>Active</button>\n\t\t\t            <button>Completed</button>\n\t\t\t        </ul>\n\t\t\t        <div className=\"todo-app__clean\">\n\t\t\t            <button>Clear completed</button>\n\t\t\t        </div>\n\t\t\t    </footer>\n\t\t\t\t);\n\t\t}\n\t\telse {\n\t\t\treturn null;\n\t\t}\n\t}*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      errorInfo: null\n    };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // Catch errors in any components below and re-render with error message\n    this.setState({\n      error: error,\n      errorInfo: errorInfo\n    }); // You can also log error messages to an error reporting service here\n  }\n\n  render() {\n    if (this.state.errorInfo) {\n      // Error path\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Something went wrong.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"details\", {\n          style: {\n            whiteSpace: 'pre-wrap'\n          },\n          children: [this.state.error && this.state.error.toString(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), this.state.errorInfo.componentStack]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this);\n    } // Normally, just render children\n\n\n    return this.props.children;\n  }\n\n}\n\nfunction H1(props) {\n  const item = props.item;\n\n  if (item.isCompleted) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"todo-app__item-detail todo-app__item-detail-completed\",\n      children: item.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 4\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"todo-app__item-detail\",\n      children: item.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 4\n    }, this);\n  }\n}\n\n_c = H1;\n\nclass TodoApp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newItem: '',\n      itemList: [],\n      count: 0,\n      show: 'all'\n      /*all, complete, left*/\n\n    };\n  }\n\n  Footer(props) {\n    const cnt = props.count;\n    const leftCnt = props.inCompleteCnt;\n\n    if (cnt !== 0) {\n      return /*#__PURE__*/_jsxDEV(\"footer\", {\n        className: \"todo-app__footer\",\n        id: \"todo-footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-app__total\",\n          children: [leftCnt, \" left\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"todo-app__view-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-app__clean\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Clear completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 6\n      }, this);\n    } else {\n      return null;\n    }\n  }\n\n  updateInput(key, value) {\n    this.setState({\n      [key]: value\n    });\n  }\n\n  addItem() {\n    const newItem = {\n      id: this.state.count,\n      value: this.state.newItem.slice(),\n      isCompleted: false\n    };\n    const itemList = [...this.state.itemList];\n    itemList.push(newItem);\n    const newCnt = this.state.count + 1;\n    this.setState({\n      itemList,\n      newItem: '',\n      count: newCnt\n    });\n  }\n\n  changeItemState(id) {\n    var itemList = [...this.state.itemList];\n\n    if (itemList[id].isCompleted) {\n      itemList[id].isCompleted = false;\n    } else {\n      itemList[id].isCompleted = true;\n    }\n\n    this.setState({\n      itemList\n    });\n  }\n\n  deleteItem(id) {\n    const itemList = [...this.state.itemList];\n    const updatedList = itemList.filter(item => item.id !== id);\n    const newCnt = this.state.count - 1;\n    this.setState({\n      itemList: updatedList,\n      count: newCnt\n    });\n  }\n\n  setShowContent(show) {\n    this.setState({\n      show: show\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        text: \"todos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"todo-app__main\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"todo-app__input\",\n          placeholder: \"What needs to be done?\",\n          value: this.state.newItem,\n          onChange: e => this.updateInput(\"newItem\", e.target.value),\n          onKeyPress: e => {\n            if (e.key === 'Enter') {\n              this.addItem();\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"todo-app__list\",\n          id: \"todo-list\",\n          children: this.state.itemList.map(item => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"todo-app__item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"todo-app__checkbox\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  id: item.id,\n                  type: \"checkbox\",\n                  onClick: e => this.changeItemState(item.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 32\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: item.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 32\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 28\n              }, this), /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n                children: /*#__PURE__*/_jsxDEV(H1, {\n                  item: item\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 18\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 28\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"img/x.png\",\n                className: \"todo-app__item-x\",\n                onClick: e => this.deleteItem(item.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 28\n              }, this)]\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n        children: /*#__PURE__*/_jsxDEV(\"footer\", {\n          className: \"todo-app__footer\",\n          id: \"todo-footer\",\n          style: this.state.count === 0 ? {\n            visibility: 'hidden'\n          } : {\n            visibility: 'visible'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"todo-app__total\",\n            children: [this.state.itemList.filter(item => item.isCompleted !== true).length, \" left\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"todo-app__view-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => this.setState({\n                show: 'all'\n              }),\n              children: \"All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => this.setShowContent('active'),\n              children: \"Active\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => this.setShowContent('completed'),\n              children: \"Completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 20\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"todo-app__clean\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Clear completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 20\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 16\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default TodoApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"H1\");","map":{"version":3,"sources":["/Users/chihsin1/Documents/wp1092/hw3/own/src/containers/TodoApp.js"],"names":["React","Component","Header","ErrorBoundary","constructor","props","state","error","errorInfo","componentDidCatch","setState","render","whiteSpace","toString","componentStack","children","H1","item","isCompleted","value","TodoApp","newItem","itemList","count","show","Footer","cnt","leftCnt","inCompleteCnt","updateInput","key","addItem","id","slice","push","newCnt","changeItemState","deleteItem","updatedList","filter","setShowContent","e","target","map","visibility","length"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Header from \"../components/Header\";\n/*import Section from \"../components/Section\";*/\n/*import Footer from \"../components/Footer\";*/\n\n/*function Footer(props) {\n\t\tconst cnt = props.count;\n\t\tconst leftCnt = props.inCompleteCnt;\n\t\tif (cnt !== 0) {\n\t\t\treturn (\n\t\t\t\t<footer className=\"todo-app__footer\" id=\"todo-footer\">\n\t\t\t        <div className=\"todo-app__total\">\n\t\t\t            {leftCnt} left\n\t\t\t        </div>\n\t\t\t        <ul className=\"todo-app__view-buttons\">\n\t\t\t            <button>All</button>\n\t\t\t            <button>Active</button>\n\t\t\t            <button>Completed</button>\n\t\t\t        </ul>\n\t\t\t        <div className=\"todo-app__clean\">\n\t\t\t            <button>Clear completed</button>\n\t\t\t        </div>\n\t\t\t    </footer>\n\t\t\t\t);\n\t\t}\n\t\telse {\n\t\t\treturn null;\n\t\t}\n\t}*/\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: null, errorInfo: null };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // Catch errors in any components below and re-render with error message\n    this.setState({\n      error: error,\n      errorInfo: errorInfo\n    })\n    // You can also log error messages to an error reporting service here\n  }\n\n  render() {\n    if (this.state.errorInfo) {\n      // Error path\n      return (\n        <div>\n          <h2>Something went wrong.</h2>\n          <details style={{ whiteSpace: 'pre-wrap' }}>\n            {this.state.error && this.state.error.toString()}\n            <br />\n            {this.state.errorInfo.componentStack}\n          </details>\n        </div>\n      );\n    }\n    // Normally, just render children\n    return this.props.children;\n  }\n}\n\nfunction H1(props) {\n\tconst item = props.item;\n\n\tif (item.isCompleted) {\n\t\treturn (\n\t\t\t<h1 className='todo-app__item-detail todo-app__item-detail-completed' >{item.value}</h1>\n\t\t\t);\n\t}\n\telse {\n\t\treturn (\n\t\t\t<h1 className=\"todo-app__item-detail\">{item.value}</h1>\n\t\t)\n\t}\n}\n\nclass TodoApp extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tnewItem: '',\n\t\t\titemList: [],\n\t\t\tcount: 0,\n\t\t\tshow: 'all', /*all, complete, left*/\n\t\t};\n\t}\n\n\tFooter(props) {\n\t\t\tconst cnt = props.count;\n\t\t\tconst leftCnt = props.inCompleteCnt;\n\t\t\tif (cnt !== 0) {\n\t\t\t\treturn (\n\t\t\t\t\t<footer className=\"todo-app__footer\" id=\"todo-footer\">\n\t\t\t\t        <div className=\"todo-app__total\">\n\t\t\t\t            {leftCnt} left\n\t\t\t\t        </div>\n\t\t\t\t        <ul className=\"todo-app__view-buttons\">\n\t\t\t\t            <button>All</button>\n\t\t\t\t            <button>Active</button>\n\t\t\t\t            <button>Completed</button>\n\t\t\t\t        </ul>\n\t\t\t\t        <div className=\"todo-app__clean\">\n\t\t\t\t            <button>Clear completed</button>\n\t\t\t\t        </div>\n\t\t\t\t    </footer>\n\t\t\t\t\t);\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\tupdateInput(key, value) {\n\t\tthis.setState({[key]: value});\n\t}\n\n\taddItem() {\n\t\tconst newItem = {\n\t\t\t\tid: this.state.count,\n\t\t\t\tvalue: this.state.newItem.slice(),\n\t\t\t\tisCompleted: false,\n\t\t\t};\n\n\t\tconst itemList = [...this.state.itemList];\n\t\titemList.push(newItem);\n\n\t\tconst newCnt = this.state.count + 1;\n\n\t\tthis.setState({\n\t\t\titemList,\n\t\t\tnewItem: '',\n\t\t\tcount: newCnt,\n\t\t});\n\t}\n\n\tchangeItemState(id) {\n\t\tvar itemList = [...this.state.itemList];\n\n\t\tif (itemList[id].isCompleted) {\n\t\t\titemList[id].isCompleted = false;\n\t\t}\n\t\telse {\n\t\t\titemList[id].isCompleted = true;\n\t\t}\n\n\t\tthis.setState({\n\t\t\titemList,\n\t\t});\n\t}\n\n\tdeleteItem(id) {\n\t\tconst itemList = [...this.state.itemList];\n\t\tconst updatedList = itemList.filter(item => item.id !== id);\n\t\tconst newCnt = this.state.count - 1;\n\t\tthis.setState({\n\t\t\titemList: updatedList,\n\t\t\tcount: newCnt,\n\t\t})\n\t}\n\n\tsetShowContent(show) {\n\t\tthis.setState({\n\t\t\tshow: show,\n\t\t})\n\t}\n\n    render() {\n        return (\n            <>\n                <Header text=\"todos\" />\n                <section className=\"todo-app__main\">\n\t                <input\n\t                \tclassName=\"todo-app__input\"\n\t                \tplaceholder=\"What needs to be done?\"\n\t                \tvalue={this.state.newItem}\n\t                \tonChange={e => this.updateInput(\"newItem\", e.target.value)}\n\t                \tonKeyPress={e => {if (e.key === 'Enter') {this.addItem();}}} />\n\t                <ul className=\"todo-app__list\" id=\"todo-list\">\n\t                \t{this.state.itemList.map(item => {\n\t                \t\treturn (\n\t                \t\t\t<li key={item.id} className=\"todo-app__item\">\n\t\t\t                        <div className=\"todo-app__checkbox\">\n\t\t\t                            <input\n\t\t\t                            \tid={item.id}\n\t\t\t                            \ttype='checkbox'\n\t\t\t                            \tonClick={e => this.changeItemState(item.id)}/>\n\t\t\t                            <label htmlFor={item.id}></label>\n\t\t\t                        </div>\n\t\t\t                        <ErrorBoundary>\n\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\t<H1 item={item} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ErrorBoundary>\n\n\t\t\t                        <img src=\"img/x.png\" className=\"todo-app__item-x\" onClick={e => this.deleteItem(item.id)}/>\n\t\t\t                    </li>\n\t                \t\t\t);\n\t                \t})}\n\t                </ul>\n            \t</section>\n\t\t\t\t\t\t\t<ErrorBoundary>\n\t\t\t\t\t\t\t\t<footer className=\"todo-app__footer\" id=\"todo-footer\" style={this.state.count === 0? {visibility:'hidden'}: {visibility:'visible'}}>\n\t\t\t\t\t\t\t        <div className=\"todo-app__total\">\n\t\t\t\t\t\t\t            {this.state.itemList.filter(item => item.isCompleted !== true).length} left\n\t\t\t\t\t\t\t        </div>\n\t\t\t\t\t\t\t        <ul className=\"todo-app__view-buttons\">\n\t\t\t\t\t\t\t            <button onClick={e => this.setState({show: 'all'})}>All</button>\n\t\t\t\t\t\t\t            <button onClick={e => this.setShowContent('active')}>Active</button>\n\t\t\t\t\t\t\t            <button onClick={e => this.setShowContent('completed')}>Completed</button>\n\t\t\t\t\t\t\t        </ul>\n\t\t\t\t\t\t\t        <div className=\"todo-app__clean\">\n\t\t\t\t\t\t\t            <button>Clear completed</button>\n\t\t\t\t\t\t\t        </div>\n\t\t\t\t\t\t\t    </footer>\n\t\t\t\t\t\t\t</ErrorBoundary>\n            </>\n        );\n    }\n}\n\nexport default TodoApp;\n"]},"metadata":{},"sourceType":"module"}