{"ast":null,"code":"var _jsxFileName = \"/Users/chihsin1/Documents/wp1092/hw3/own/src/containers/TodoApp.js\";\nimport React, { Component } from \"react\";\nimport Header from \"../components/Header\";\n/*import Section from \"../components/Section\";*/\n\n/*import Footer from \"../components/Footer\";*/\n\n/*function Footer(props) {\n\t\tconst cnt = props.count;\n\t\tconst leftCnt = props.inCompleteCnt;\n\t\tif (cnt !== 0) {\n\t\t\treturn (\n\t\t\t\t<footer className=\"todo-app__footer\" id=\"todo-footer\">\n\t\t\t        <div className=\"todo-app__total\">\n\t\t\t            {leftCnt} left\n\t\t\t        </div>\n\t\t\t        <ul className=\"todo-app__view-buttons\">\n\t\t\t            <button>All</button>\n\t\t\t            <button>Active</button>\n\t\t\t            <button>Completed</button>\n\t\t\t        </ul>\n\t\t\t        <div className=\"todo-app__clean\">\n\t\t\t            <button>Clear completed</button>\n\t\t\t        </div>\n\t\t\t    </footer>\n\t\t\t\t);\n\t\t}\n\t\telse {\n\t\t\treturn null;\n\t\t}\n\t}*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      errorInfo: null\n    };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // Catch errors in any components below and re-render with error message\n    this.setState({\n      error: error,\n      errorInfo: errorInfo\n    }); // You can also log error messages to an error reporting service here\n  }\n\n  render() {\n    if (this.state.errorInfo) {\n      // Error path\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Something went wrong.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"details\", {\n          style: {\n            whiteSpace: 'pre-wrap'\n          },\n          children: [this.state.error && this.state.error.toString(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), this.state.errorInfo.componentStack]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this);\n    } // Normally, just render children\n\n\n    return this.props.children;\n  }\n\n}\n\nclass TodoApp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newItem: '',\n      itemList: [],\n      count: 0,\n      show: 'all'\n      /*all, active, completed*/\n\n    };\n  }\n\n  showList() {\n    var showList = this.state.itemList;\n\n    if (this.state.show === 'active') {\n      showList = this.state.itemList.filter(item => item.isCompleted !== true);\n    } else if (this.state.show === 'completed') {\n      showList = this.state.itemList.filter(item => item.isCompleted === true);\n    }\n\n    const showContent = showList.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"todo-app__item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-app__checkbox\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: item.id,\n            type: \"checkbox\",\n            onClick: e => this.changeItemState(item.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: item.id,\n            style: item.isCompleted ? {\n              background: '#26ca299b'\n            } : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 10\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: item.isCompleted ? 'todo-app__item-detail todo-app__item-detail-completed' : 'todo-app__item-detail',\n            children: item.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"img/x.png\",\n          className: \"todo-app__item-x\",\n          onClick: e => this.deleteItem(item.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 8\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 5\n      }, this);\n    });\n    return showContent;\n  }\n\n  updateInput(key, value) {\n    this.setState({\n      [key]: value\n    });\n  }\n\n  addItem() {\n    const newItem = {\n      id: this.state.count,\n      value: this.state.newItem.slice(),\n      isCompleted: false\n    };\n    const itemList = [...this.state.itemList];\n    itemList.push(newItem);\n    const newCnt = this.state.count + 1;\n    this.setState({\n      itemList,\n      newItem: '',\n      count: newCnt\n    });\n  }\n\n  changeItemState(id) {\n    var itemList = [...this.state.itemList];\n\n    if (itemList[id].isCompleted) {\n      itemList[id].isCompleted = false;\n    } else {\n      itemList[id].isCompleted = true;\n    }\n\n    console.log(itemList[id].isCompleted);\n    this.setState({\n      itemList\n    });\n  }\n\n  deleteItem(id) {\n    const itemList = [...this.state.itemList];\n    const updatedList = itemList.filter(item => item.id !== id);\n    const newCnt = this.state.count - 1;\n    this.setState({\n      itemList: updatedList,\n      count: newCnt\n    });\n\n    if (newCnt === 0) {\n      this.setState({\n        show: 'all'\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        text: \"todos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"todo-app__main\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"todo-app__input\",\n          placeholder: \"What needs to be done?\",\n          value: this.state.newItem,\n          onChange: e => this.updateInput(\"newItem\", e.target.value),\n          onKeyPress: e => {\n            if (e.key === 'Enter') {\n              this.addItem();\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"todo-app__list\",\n          id: \"todo-list\",\n          children: this.showList()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n        children: /*#__PURE__*/_jsxDEV(\"footer\", {\n          className: \"todo-app__footer\",\n          id: \"todo-footer\",\n          style: this.state.count === 0 ? {\n            visibility: 'hidden'\n          } : {\n            visibility: 'visible'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"todo-app__total\",\n            children: [this.state.itemList.filter(item => item.isCompleted !== true).length, \" left\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"todo-app__view-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => this.setState({\n                show: 'all'\n              }),\n              children: \"All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => this.setState({\n                show: 'active'\n              }),\n              children: \"Active\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => this.setState({\n                show: 'completed'\n              }),\n              children: \"Completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 20\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"todo-app__clean\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              style: this.state.itemList.filter(item => item.isCompleted === true).length === 0 ? {\n                visibility: 'hidden'\n              } : {\n                visibility: 'visible'\n              },\n              children: \"Clear completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 20\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 16\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default TodoApp;","map":{"version":3,"sources":["/Users/chihsin1/Documents/wp1092/hw3/own/src/containers/TodoApp.js"],"names":["React","Component","Header","ErrorBoundary","constructor","props","state","error","errorInfo","componentDidCatch","setState","render","whiteSpace","toString","componentStack","children","TodoApp","newItem","itemList","count","show","showList","filter","item","isCompleted","showContent","map","id","e","changeItemState","background","value","deleteItem","updateInput","key","addItem","slice","push","newCnt","console","log","updatedList","target","visibility","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA;;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAEA,MAAMC,aAAN,SAA4BH,KAAK,CAACC,SAAlC,CAA4C;AAC1CG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,KAAK,EAAE,IAAT;AAAeC,MAAAA,SAAS,EAAE;AAA1B,KAAb;AACD;;AAEDC,EAAAA,iBAAiB,CAACF,KAAD,EAAQC,SAAR,EAAmB;AAClC;AACA,SAAKE,QAAL,CAAc;AACZH,MAAAA,KAAK,EAAEA,KADK;AAEZC,MAAAA,SAAS,EAAEA;AAFC,KAAd,EAFkC,CAMlC;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKL,KAAL,CAAWE,SAAf,EAA0B;AACxB;AACA,0BACE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAS,UAAA,KAAK,EAAE;AAAEI,YAAAA,UAAU,EAAE;AAAd,WAAhB;AAAA,qBACG,KAAKN,KAAL,CAAWC,KAAX,IAAoB,KAAKD,KAAL,CAAWC,KAAX,CAAiBM,QAAjB,EADvB,eAEE;AAAA;AAAA;AAAA;AAAA,kBAFF,EAGG,KAAKP,KAAL,CAAWE,SAAX,CAAqBM,cAHxB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAUD,KAbM,CAcP;;;AACA,WAAO,KAAKT,KAAL,CAAWU,QAAlB;AACD;;AA/ByC;;AAkC5C,MAAMC,OAAN,SAAsBf,SAAtB,CAAgC;AAC/BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACZW,MAAAA,OAAO,EAAE,EADG;AAEZC,MAAAA,QAAQ,EAAE,EAFE;AAGZC,MAAAA,KAAK,EAAE,CAHK;AAIZC,MAAAA,IAAI,EAAE;AAAO;;AAJD,KAAb;AAMA;;AAEDC,EAAAA,QAAQ,GAAG;AACT,QAAIA,QAAQ,GAAG,KAAKf,KAAL,CAAWY,QAA1B;;AACA,QAAI,KAAKZ,KAAL,CAAWc,IAAX,KAAoB,QAAxB,EAAkC;AACjCC,MAAAA,QAAQ,GAAG,KAAKf,KAAL,CAAWY,QAAX,CAAoBI,MAApB,CAA2BC,IAAI,IAAIA,IAAI,CAACC,WAAL,KAAqB,IAAxD,CAAX;AACA,KAFD,MAGK,IAAI,KAAKlB,KAAL,CAAWc,IAAX,KAAoB,WAAxB,EAAqC;AACzCC,MAAAA,QAAQ,GAAG,KAAKf,KAAL,CAAWY,QAAX,CAAoBI,MAApB,CAA2BC,IAAI,IAAIA,IAAI,CAACC,WAAL,KAAqB,IAAxD,CAAX;AACA;;AACD,UAAMC,WAAW,GAAGJ,QAAQ,CAACK,GAAT,CAAaH,IAAI,IAAI;AACzC,0BACC;AAAkB,QAAA,SAAS,EAAC,gBAA5B;AAAA,gCACG;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,kCACE;AACC,YAAA,EAAE,EAAEA,IAAI,CAACI,EADV;AAEC,YAAA,IAAI,EAAC,UAFN;AAGC,YAAA,OAAO,EAAEC,CAAC,IAAI,KAAKC,eAAL,CAAqBN,IAAI,CAACI,EAA1B;AAHf;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE;AAAO,YAAA,OAAO,EAAEJ,IAAI,CAACI,EAArB;AAAyB,YAAA,KAAK,EAAEJ,IAAI,CAACC,WAAL,GAAkB;AAACM,cAAAA,UAAU,EAAE;AAAb,aAAlB,GAA4C;AAA5E;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADH,eAQG,QAAC,aAAD;AAAA,iCACC;AAAI,YAAA,SAAS,EAAEP,IAAI,CAACC,WAAL,GAAkB,uDAAlB,GAA2E,uBAA1F;AAAA,sBAAqHD,IAAI,CAACQ;AAA1H;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBARH,eAYG;AAAK,UAAA,GAAG,EAAC,WAAT;AAAqB,UAAA,SAAS,EAAC,kBAA/B;AAAkD,UAAA,OAAO,EAAEH,CAAC,IAAI,KAAKI,UAAL,CAAgBT,IAAI,CAACI,EAArB;AAAhE;AAAA;AAAA;AAAA;AAAA,gBAZH;AAAA,SAASJ,IAAI,CAACI,EAAd;AAAA;AAAA;AAAA;AAAA,cADD;AAgBA,KAjBoB,CAApB;AAkBD,WAAOF,WAAP;AACA;;AAEDQ,EAAAA,WAAW,CAACC,GAAD,EAAMH,KAAN,EAAa;AACvB,SAAKrB,QAAL,CAAc;AAAC,OAACwB,GAAD,GAAOH;AAAR,KAAd;AACA;;AAEDI,EAAAA,OAAO,GAAG;AACT,UAAMlB,OAAO,GAAG;AACdU,MAAAA,EAAE,EAAE,KAAKrB,KAAL,CAAWa,KADD;AAEdY,MAAAA,KAAK,EAAE,KAAKzB,KAAL,CAAWW,OAAX,CAAmBmB,KAAnB,EAFO;AAGdZ,MAAAA,WAAW,EAAE;AAHC,KAAhB;AAMA,UAAMN,QAAQ,GAAG,CAAC,GAAG,KAAKZ,KAAL,CAAWY,QAAf,CAAjB;AACAA,IAAAA,QAAQ,CAACmB,IAAT,CAAcpB,OAAd;AAEA,UAAMqB,MAAM,GAAG,KAAKhC,KAAL,CAAWa,KAAX,GAAmB,CAAlC;AAEA,SAAKT,QAAL,CAAc;AACbQ,MAAAA,QADa;AAEbD,MAAAA,OAAO,EAAE,EAFI;AAGbE,MAAAA,KAAK,EAAEmB;AAHM,KAAd;AAKA;;AAEDT,EAAAA,eAAe,CAACF,EAAD,EAAK;AACnB,QAAIT,QAAQ,GAAG,CAAC,GAAG,KAAKZ,KAAL,CAAWY,QAAf,CAAf;;AAEA,QAAIA,QAAQ,CAACS,EAAD,CAAR,CAAaH,WAAjB,EAA8B;AAC7BN,MAAAA,QAAQ,CAACS,EAAD,CAAR,CAAaH,WAAb,GAA2B,KAA3B;AACA,KAFD,MAGK;AACJN,MAAAA,QAAQ,CAACS,EAAD,CAAR,CAAaH,WAAb,GAA2B,IAA3B;AACA;;AAEDe,IAAAA,OAAO,CAACC,GAAR,CAAYtB,QAAQ,CAACS,EAAD,CAAR,CAAaH,WAAzB;AAEA,SAAKd,QAAL,CAAc;AACbQ,MAAAA;AADa,KAAd;AAGA;;AAEDc,EAAAA,UAAU,CAACL,EAAD,EAAK;AACd,UAAMT,QAAQ,GAAG,CAAC,GAAG,KAAKZ,KAAL,CAAWY,QAAf,CAAjB;AACA,UAAMuB,WAAW,GAAGvB,QAAQ,CAACI,MAAT,CAAgBC,IAAI,IAAIA,IAAI,CAACI,EAAL,KAAYA,EAApC,CAApB;AACA,UAAMW,MAAM,GAAG,KAAKhC,KAAL,CAAWa,KAAX,GAAmB,CAAlC;AACA,SAAKT,QAAL,CAAc;AACbQ,MAAAA,QAAQ,EAAEuB,WADG;AAEbtB,MAAAA,KAAK,EAAEmB;AAFM,KAAd;;AAIA,QAAIA,MAAM,KAAK,CAAf,EAAkB;AACjB,WAAK5B,QAAL,CAAc;AACbU,QAAAA,IAAI,EAAE;AADO,OAAd;AAGA;AACD;;AAEET,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAS,QAAA,SAAS,EAAC,gBAAnB;AAAA,gCACC;AACC,UAAA,SAAS,EAAC,iBADX;AAEC,UAAA,WAAW,EAAC,wBAFb;AAGC,UAAA,KAAK,EAAE,KAAKL,KAAL,CAAWW,OAHnB;AAIC,UAAA,QAAQ,EAAEW,CAAC,IAAI,KAAKK,WAAL,CAAiB,SAAjB,EAA4BL,CAAC,CAACc,MAAF,CAASX,KAArC,CAJhB;AAKC,UAAA,UAAU,EAAEH,CAAC,IAAI;AAAC,gBAAIA,CAAC,CAACM,GAAF,KAAU,OAAd,EAAuB;AAAC,mBAAKC,OAAL;AAAgB;AAAC;AAL5D;AAAA;AAAA;AAAA;AAAA,gBADD,eAOC;AAAI,UAAA,SAAS,EAAC,gBAAd;AAA+B,UAAA,EAAE,EAAC,WAAlC;AAAA,oBACE,KAAKd,QAAL;AADF;AAAA;AAAA;AAAA;AAAA,gBAPD;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAaL,QAAC,aAAD;AAAA,+BACC;AAAQ,UAAA,SAAS,EAAC,kBAAlB;AAAqC,UAAA,EAAE,EAAC,aAAxC;AAAsD,UAAA,KAAK,EAAE,KAAKf,KAAL,CAAWa,KAAX,KAAqB,CAArB,GAAwB;AAACwB,YAAAA,UAAU,EAAC;AAAZ,WAAxB,GAA+C;AAACA,YAAAA,UAAU,EAAC;AAAZ,WAA5G;AAAA,kCACO;AAAK,YAAA,SAAS,EAAC,iBAAf;AAAA,uBACK,KAAKrC,KAAL,CAAWY,QAAX,CAAoBI,MAApB,CAA2BC,IAAI,IAAIA,IAAI,CAACC,WAAL,KAAqB,IAAxD,EAA8DoB,MADnE;AAAA;AAAA;AAAA;AAAA;AAAA,kBADP,eAIO;AAAI,YAAA,SAAS,EAAC,wBAAd;AAAA,oCACI;AAAQ,cAAA,OAAO,EAAEhB,CAAC,IAAI,KAAKlB,QAAL,CAAc;AAACU,gBAAAA,IAAI,EAAE;AAAP,eAAd,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAQ,cAAA,OAAO,EAAEQ,CAAC,IAAI,KAAKlB,QAAL,CAAc;AAACU,gBAAAA,IAAI,EAAE;AAAP,eAAd,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAQ,cAAA,OAAO,EAAEQ,CAAC,IAAI,KAAKlB,QAAL,CAAc;AAACU,gBAAAA,IAAI,EAAE;AAAP,eAAd,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJP,eASO;AAAK,YAAA,SAAS,EAAC,iBAAf;AAAA,mCACI;AAAQ,cAAA,KAAK,EAAE,KAAKd,KAAL,CAAWY,QAAX,CAAoBI,MAApB,CAA2BC,IAAI,IAAIA,IAAI,CAACC,WAAL,KAAqB,IAAxD,EAA8DoB,MAA9D,KAAyE,CAAzE,GAA4E;AAACD,gBAAAA,UAAU,EAAC;AAAZ,eAA5E,GAAmG;AAACA,gBAAAA,UAAU,EAAC;AAAZ,eAAlH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBATP;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cAbK;AAAA,oBADJ;AA+BH;;AA/H2B;;AAkIhC,eAAe3B,OAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Header from \"../components/Header\";\n/*import Section from \"../components/Section\";*/\n/*import Footer from \"../components/Footer\";*/\n\n/*function Footer(props) {\n\t\tconst cnt = props.count;\n\t\tconst leftCnt = props.inCompleteCnt;\n\t\tif (cnt !== 0) {\n\t\t\treturn (\n\t\t\t\t<footer className=\"todo-app__footer\" id=\"todo-footer\">\n\t\t\t        <div className=\"todo-app__total\">\n\t\t\t            {leftCnt} left\n\t\t\t        </div>\n\t\t\t        <ul className=\"todo-app__view-buttons\">\n\t\t\t            <button>All</button>\n\t\t\t            <button>Active</button>\n\t\t\t            <button>Completed</button>\n\t\t\t        </ul>\n\t\t\t        <div className=\"todo-app__clean\">\n\t\t\t            <button>Clear completed</button>\n\t\t\t        </div>\n\t\t\t    </footer>\n\t\t\t\t);\n\t\t}\n\t\telse {\n\t\t\treturn null;\n\t\t}\n\t}*/\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: null, errorInfo: null };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // Catch errors in any components below and re-render with error message\n    this.setState({\n      error: error,\n      errorInfo: errorInfo\n    })\n    // You can also log error messages to an error reporting service here\n  }\n\n  render() {\n    if (this.state.errorInfo) {\n      // Error path\n      return (\n        <div>\n          <h2>Something went wrong.</h2>\n          <details style={{ whiteSpace: 'pre-wrap' }}>\n            {this.state.error && this.state.error.toString()}\n            <br />\n            {this.state.errorInfo.componentStack}\n          </details>\n        </div>\n      );\n    }\n    // Normally, just render children\n    return this.props.children;\n  }\n}\n\nclass TodoApp extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tnewItem: '',\n\t\t\titemList: [],\n\t\t\tcount: 0,\n\t\t\tshow: 'all', /*all, active, completed*/\n\t\t};\n\t}\n\n\tshowList() {\n\t\t var showList = this.state.itemList;\n\t\t if (this.state.show === 'active') {\n\t\t\t showList = this.state.itemList.filter(item => item.isCompleted !== true);\n\t\t }\n\t\t else if (this.state.show === 'completed') {\n\t\t\t showList = this.state.itemList.filter(item => item.isCompleted === true);\n\t\t }\n\t\t const showContent = showList.map(item => {\n\t\t\treturn (\n\t\t\t\t<li key={item.id} className=\"todo-app__item\">\n\t\t\t\t\t\t\t<div className=\"todo-app__checkbox\">\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tid={item.id}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t\tonClick={e => this.changeItemState(item.id)}/>\n\t\t\t\t\t\t\t\t\t<label htmlFor={item.id} style={item.isCompleted? {background: '#26ca299b'}:null}></label>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<ErrorBoundary>\n\t\t\t\t\t\t\t\t<h1 className={item.isCompleted? 'todo-app__item-detail todo-app__item-detail-completed': 'todo-app__item-detail'} >{item.value}</h1>\n\t\t\t\t\t\t\t</ErrorBoundary>\n\n\t\t\t\t\t\t\t<img src=\"img/x.png\" className=\"todo-app__item-x\" onClick={e => this.deleteItem(item.id)}/>\n\t\t\t\t\t</li>\n\t\t\t\t);\n\t\t})\n\t\treturn showContent;\n\t}\n\n\tupdateInput(key, value) {\n\t\tthis.setState({[key]: value});\n\t}\n\n\taddItem() {\n\t\tconst newItem = {\n\t\t\t\tid: this.state.count,\n\t\t\t\tvalue: this.state.newItem.slice(),\n\t\t\t\tisCompleted: false,\n\t\t\t};\n\n\t\tconst itemList = [...this.state.itemList];\n\t\titemList.push(newItem);\n\n\t\tconst newCnt = this.state.count + 1;\n\n\t\tthis.setState({\n\t\t\titemList,\n\t\t\tnewItem: '',\n\t\t\tcount: newCnt,\n\t\t});\n\t}\n\n\tchangeItemState(id) {\n\t\tvar itemList = [...this.state.itemList];\n\n\t\tif (itemList[id].isCompleted) {\n\t\t\titemList[id].isCompleted = false;\n\t\t}\n\t\telse {\n\t\t\titemList[id].isCompleted = true;\n\t\t}\n\n\t\tconsole.log(itemList[id].isCompleted);\n\n\t\tthis.setState({\n\t\t\titemList,\n\t\t});\n\t}\n\n\tdeleteItem(id) {\n\t\tconst itemList = [...this.state.itemList];\n\t\tconst updatedList = itemList.filter(item => item.id !== id);\n\t\tconst newCnt = this.state.count - 1;\n\t\tthis.setState({\n\t\t\titemList: updatedList,\n\t\t\tcount: newCnt,\n\t\t})\n\t\tif (newCnt === 0) {\n\t\t\tthis.setState({\n\t\t\t\tshow: 'all',\n\t\t\t})\n\t\t}\n\t}\n\n    render() {\n        return (\n            <>\n                <Header text=\"todos\" />\n                <section className=\"todo-app__main\">\n\t                <input\n\t                \tclassName=\"todo-app__input\"\n\t                \tplaceholder=\"What needs to be done?\"\n\t                \tvalue={this.state.newItem}\n\t                \tonChange={e => this.updateInput(\"newItem\", e.target.value)}\n\t                \tonKeyPress={e => {if (e.key === 'Enter') {this.addItem();}}} />\n\t                <ul className=\"todo-app__list\" id=\"todo-list\">\n\t                \t{this.showList()}\n\t                </ul>\n            \t</section>\n\t\t\t\t\t\t\t<ErrorBoundary>\n\t\t\t\t\t\t\t\t<footer className=\"todo-app__footer\" id=\"todo-footer\" style={this.state.count === 0? {visibility:'hidden'}: {visibility:'visible'}}>\n\t\t\t\t\t\t\t        <div className=\"todo-app__total\">\n\t\t\t\t\t\t\t            {this.state.itemList.filter(item => item.isCompleted !== true).length} left\n\t\t\t\t\t\t\t        </div>\n\t\t\t\t\t\t\t        <ul className=\"todo-app__view-buttons\">\n\t\t\t\t\t\t\t            <button onClick={e => this.setState({show: 'all'})}>All</button>\n\t\t\t\t\t\t\t            <button onClick={e => this.setState({show: 'active'})}>Active</button>\n\t\t\t\t\t\t\t            <button onClick={e => this.setState({show: 'completed'})}>Completed</button>\n\t\t\t\t\t\t\t        </ul>\n\t\t\t\t\t\t\t        <div className=\"todo-app__clean\">\n\t\t\t\t\t\t\t            <button style={this.state.itemList.filter(item => item.isCompleted === true).length === 0? {visibility:'hidden'}: {visibility:'visible'}}>Clear completed</button>\n\t\t\t\t\t\t\t        </div>\n\t\t\t\t\t\t\t    </footer>\n\t\t\t\t\t\t\t</ErrorBoundary>\n            </>\n        );\n    }\n}\n\nexport default TodoApp;\n"]},"metadata":{},"sourceType":"module"}