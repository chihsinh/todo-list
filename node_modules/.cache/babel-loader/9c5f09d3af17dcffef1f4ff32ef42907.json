{"ast":null,"code":"var _jsxFileName = \"/Users/chihsin1/Documents/web-hw-on-git/todo-list/src/containers/TodoApp.js\";\nimport React, { Component } from \"react\";\nimport Header from \"../components/Header\";\nimport Section from \"../components/Section\";\nimport Footer from \"../components/Footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass TodoApp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newItem: '',\n      itemList: [],\n      count: 0,\n      show: 'all'\n      /*all, active, completed*/\n\n    };\n    this.updateState = this.updateState.bind(this);\n    this.clearCompleted = this.clearCompleted.bind(this);\n    this.changeItemState = this.changeItemState.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n    this.addItem = this.addItem.bind(this);\n  }\n  /*\tshowList() {\n  \t\t var showList = this.state.itemList;\n  \t\t if (this.state.show === 'active') {\n  \t\t\t showList = this.state.itemList.filter(item => item.isCompleted !== true);\n  \t\t }\n  \t\t else if (this.state.show === 'completed') {\n  \t\t\t showList = this.state.itemList.filter(item => item.isCompleted === true);\n  \t\t }\n  \t\t const showContent = showList.map(item => {\n  \t\t\treturn (\n  \t\t\t\t<li key={showList.indexOf(item)} className=\"todo-app__item\">\n  \t\t\t\t\t\t\t<div className=\"todo-app__checkbox\">\n  \t\t\t\t\t\t\t\t\t<input\n  \t\t\t\t\t\t\t\t\t\tid={showList.indexOf(item)}\n  \t\t\t\t\t\t\t\t\t\ttype='checkbox'\n  \t\t\t\t\t\t\t\t\t\tonClick={e => this.changeItemState(showList.indexOf(item))}/>\n  \t\t\t\t\t\t\t\t\t<label htmlFor={showList.indexOf(item)} style={item.isCompleted? {background: '#26ca299b'}:null}></label>\n  \t\t\t\t\t\t\t</div>\n  \t\t\t\t\t\t\t\t<h1 className={item.isCompleted? 'todo-app__item-detail todo-app__item-detail-completed': 'todo-app__item-detail'} >{item.value}</h1>\n  \n  \t\t\t\t\t\t\t<img src=\"img/x.png\" className=\"todo-app__item-x\" onClick={e => this.deleteItem(showList.indexOf(item))}/>\n  \t\t\t\t\t</li>\n  \t\t\t\t);\n  \t\t})\n  \t\treturn showContent;\n  \t}*/\n\n\n  addItem() {\n    const newItem = {\n      value: this.state.newItem.slice(),\n      isCompleted: false\n    };\n    var updatedList = [...this.state.itemList];\n    updatedList.push(newItem);\n    const newCnt = this.state.count + 1;\n    this.setState({\n      itemList: updatedList,\n      newItem: '',\n      count: newCnt\n    });\n  }\n\n  changeItemState(id) {\n    var itemList = [...this.state.itemList];\n\n    if (itemList[id].isCompleted) {\n      itemList[id].isCompleted = false;\n    } else {\n      itemList[id].isCompleted = true;\n    }\n\n    this.setState({\n      itemList\n    });\n  }\n\n  deleteItem(id) {\n    const itemList = [...this.state.itemList];\n    var updatedList = itemList.filter(item => itemList.indexOf(item) !== id);\n    const newCnt = this.state.count - 1;\n    this.setState({\n      itemList: updatedList,\n      count: newCnt\n    });\n\n    if (newCnt === 0) {\n      this.setState({\n        show: 'all'\n      });\n    }\n  }\n\n  clearCompleted() {\n    var updatedList = this.state.itemList.filter(item => item.isCompleted !== true);\n    this.setState({\n      itemList: updatedList,\n      count: updatedList.length\n    });\n\n    if (this.state.count === 0) {\n      this.setState({\n        show: 'all'\n      });\n    }\n  }\n\n  updateState(newState) {\n    this.setState(newState);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        text: \"todos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        className: \"todo-app__main\",\n        newItem: this.state.newItem,\n        updateState: this.updateState,\n        addItem: this.addItem,\n        itemList: this.state.itemList,\n        show: this.state.show,\n        changeItemState: this.changeItemState,\n        deleteItem: this.deleteItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {\n        count: this.state.count,\n        show: this.state.show,\n        itemList: this.state.itemList,\n        clearCompleted: this.clearCompleted,\n        updateState: this.updateState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default TodoApp;","map":{"version":3,"sources":["/Users/chihsin1/Documents/web-hw-on-git/todo-list/src/containers/TodoApp.js"],"names":["React","Component","Header","Section","Footer","TodoApp","constructor","props","state","newItem","itemList","count","show","updateState","bind","clearCompleted","changeItemState","deleteItem","addItem","value","slice","isCompleted","updatedList","push","newCnt","setState","id","filter","item","indexOf","length","newState","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Header from \"../components/Header\";\nimport Section from \"../components/Section\";\nimport Footer from \"../components/Footer\";\n\nclass TodoApp extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tnewItem: '',\n\t\t\titemList: [],\n\t\t\tcount: 0,\n\t\t\tshow: 'all', /*all, active, completed*/\n\t\t};\n\t\tthis.updateState = this.updateState.bind(this);\n\t\tthis.clearCompleted = this.clearCompleted.bind(this);\n\t\tthis.changeItemState = this.changeItemState.bind(this);\n\t\tthis.deleteItem = this.deleteItem.bind(this);\n\t\tthis.addItem = this.addItem.bind(this);\n\t}\n\n/*\tshowList() {\n\t\t var showList = this.state.itemList;\n\t\t if (this.state.show === 'active') {\n\t\t\t showList = this.state.itemList.filter(item => item.isCompleted !== true);\n\t\t }\n\t\t else if (this.state.show === 'completed') {\n\t\t\t showList = this.state.itemList.filter(item => item.isCompleted === true);\n\t\t }\n\t\t const showContent = showList.map(item => {\n\t\t\treturn (\n\t\t\t\t<li key={showList.indexOf(item)} className=\"todo-app__item\">\n\t\t\t\t\t\t\t<div className=\"todo-app__checkbox\">\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tid={showList.indexOf(item)}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t\tonClick={e => this.changeItemState(showList.indexOf(item))}/>\n\t\t\t\t\t\t\t\t\t<label htmlFor={showList.indexOf(item)} style={item.isCompleted? {background: '#26ca299b'}:null}></label>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<h1 className={item.isCompleted? 'todo-app__item-detail todo-app__item-detail-completed': 'todo-app__item-detail'} >{item.value}</h1>\n\n\t\t\t\t\t\t\t<img src=\"img/x.png\" className=\"todo-app__item-x\" onClick={e => this.deleteItem(showList.indexOf(item))}/>\n\t\t\t\t\t</li>\n\t\t\t\t);\n\t\t})\n\t\treturn showContent;\n\t}*/\n\n\taddItem() {\n\t\tconst newItem = {\n\t\t\t\tvalue: this.state.newItem.slice(),\n\t\t\t\tisCompleted: false,\n\t\t\t};\n\n\t\tvar updatedList = [...this.state.itemList];\n\t\tupdatedList.push(newItem);\n\n\t\tconst newCnt = this.state.count + 1;\n\n\t\tthis.setState({\n\t\t\titemList: updatedList,\n\t\t\tnewItem: '',\n\t\t\tcount: newCnt,\n\t\t});\n\t}\n\n\tchangeItemState(id) {\n\t\tvar itemList = [...this.state.itemList];\n\n\t\tif (itemList[id].isCompleted) {\n\t\t\titemList[id].isCompleted = false;\n\t\t}\n\t\telse {\n\t\t\titemList[id].isCompleted = true;\n\t\t}\n\n\t\tthis.setState({\n\t\t\titemList,\n\t\t});\n\t}\n\n\tdeleteItem(id) {\n\t\tconst itemList = [...this.state.itemList];\n\t\tvar updatedList = itemList.filter(item => itemList.indexOf(item) !== id);\n\t\tconst newCnt = this.state.count - 1;\n\t\tthis.setState({\n\t\t\titemList: updatedList,\n\t\t\tcount: newCnt,\n\t\t})\n\t\tif (newCnt === 0) {\n\t\t\tthis.setState({\n\t\t\t\tshow: 'all',\n\t\t\t})\n\t\t}\n\t}\n\n\tclearCompleted(){\n\t\tvar updatedList = this.state.itemList.filter(item => item.isCompleted !== true);\n\t\tthis.setState({\n\t\t\titemList: updatedList,\n\t\t\tcount: updatedList.length,\n\t\t})\n\t\tif (this.state.count === 0) {\n\t\t\tthis.setState({\n\t\t\t\tshow: 'all',\n\t\t\t})\n\t\t}\n\t}\n\n\tupdateState(newState){\n\t\tthis.setState(newState);\n\t}\n\n    render() {\n        return (\n            <>\n                <Header text=\"todos\" />\n                <Section className=\"todo-app__main\"\n\t\t\t\t\t\t\t\t\t\t\t\t newItem={this.state.newItem}\n\t\t\t\t\t\t\t\t\t\t\t\t updateState={this.updateState}\n\t\t\t\t\t\t\t\t\t\t\t\t addItem={this.addItem}\n\t\t\t\t\t\t\t\t\t\t\t\t itemList={this.state.itemList}\n\t\t\t                   show={this.state.show}\n\t\t\t                   changeItemState={this.changeItemState}\n\t\t\t                   deleteItem={this.deleteItem} />\n\t\t\t\t\t\t\t\t<Footer count={this.state.count}\n\t\t\t\t\t\t\t\t\t\t\t\tshow={this.state.show}\n\t\t\t\t\t\t\t\t\t\t\t\titemList={this.state.itemList}\n\t\t\t\t\t\t\t\t\t\t\t\tclearCompleted={this.clearCompleted}\n\t\t\t\t\t\t\t\t\t\t\t\tupdateState={this.updateState} />\n            </>\n        );\n    }\n}\n\nexport default TodoApp;\n"]},"metadata":{},"sourceType":"module"}